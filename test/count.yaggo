purpose "Count k-mers or qmers in fasta or fastq files"
package "jellyfish count"
description "Count k-mers in fasta or fastq files.

You see it works pretty well"
version "0.0.1"

output "count_cmdline.hpp"
name "count_cmdline"

option("mer-len", "m") {
  uint32; required; description "Length of mer"
}
option("size", "s") {
  uint64; required; suffix; description "Hash size"
}
option("threads", "t") {
  uint32; default "1"; description "Number of threads"
}
option("output", "o") {
  string; default "mer_counts"; description "Output prefix"
}
option("counter-len", "c") {
  uint32; default "7"; typestr "Length in bits"
  description "Length of counting field"
}
option("out-counter-len") {
  hidden; uint32; default "4"; typestr "Length in bytes"
  description "Length of counter fiel in output"
}
option("both-strands", "C") {
  flag; off; description "Count both strand, canonical representation"
}
option("lib") {
  string; multiple; suffix
  description "Boggus lib"
}
option("numbers") {
  int64; multiple
  description "Many ints"
}
option("double") {
  double; multiple; suffix
  description "Many doubles"
}
option("verra") {
  typestr "who knows but it is way too long anyhow."
  description "On verra"
}
arg("first") {
  string; typestr "path"
  at_least 2
  description "First"
}

arg("second") {
  uint32; multiple
  description "Plenty of ints"
}
